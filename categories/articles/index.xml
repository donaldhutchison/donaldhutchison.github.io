<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>articles on Donald Hutchison! Software Development!</title>
    <link>https://donaldhutchison.info/categories/articles/</link>
    <description>Recent content in articles on Donald Hutchison! Software Development!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Feb 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://donaldhutchison.info/categories/articles/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to write a bug report</title>
      <link>https://donaldhutchison.info/blog/2014-02-17-how-to-write-bug-reports/</link>
      <pubDate>Mon, 17 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://donaldhutchison.info/blog/2014-02-17-how-to-write-bug-reports/</guid>
      <description>Note: This is a post I created for internal distribution when writing bug reports for mobile applications. I&#39;m sharing it here because I think it&#39;s useful for future situations.
 What&#39;s a bug report Bug reports exist only to inform people about software defects. They are not for notes, for tracking work done or for planning. There are better systems for this. The best bug reports will have as much appropriate information as possible to help asses get kicked as fast and effectively as possible.</description>
    </item>
    
    <item>
      <title>CCNode Recursive Description</title>
      <link>https://donaldhutchison.info/blog/2014-02-04-ccnode-recursive-description/</link>
      <pubDate>Tue, 04 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://donaldhutchison.info/blog/2014-02-04-ccnode-recursive-description/</guid>
      <description>recusiveDescription is a pretty cool method. It&#39;s on each UIView, and when called it gives you a quick and dirty description of the current view hierarchy relative to that view.
Usually you&#39;d use this in the debugger, whilst on a breakpoint, to sanity check the positions and children of a view. This is a short gist that adds the same functionality to a CCNode subclass - the common subclass of most visual entities in a Cocos2d project.</description>
    </item>
    
    <item>
      <title>Ruby Development in the Bar</title>
      <link>https://donaldhutchison.info/blog/2014-02-02-ruby-at-the-bar/</link>
      <pubDate>Sun, 02 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://donaldhutchison.info/blog/2014-02-02-ruby-at-the-bar/</guid>
      <description>For reasons I won&#39;t get into, I found myself spending Christmas in Wick on the north east tip of Scotland. This being the second time it&#39;s occurred I was familiar with the quirks and isolation of this part of the world. One of the more upswinging things that happens is that every 26th December, there&#39;s a charity raffle in the local Seaforth Club. This is where you buy some tickets, drink, win prizes and drink some more.</description>
    </item>
    
    <item>
      <title>Global Game Jam 2014</title>
      <link>https://donaldhutchison.info/blog/2014-01-30-global-game-jame2014/</link>
      <pubDate>Thu, 30 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://donaldhutchison.info/blog/2014-01-30-global-game-jame2014/</guid>
      <description>Last weekend was the Berlin Global Game Jam 2014. I&#39;d made it part of a new years resolution plan to get more involved and release some games / projects, and this represented the first step towards doing something.
My awesome team and I worked all weekend making a twin stick style shooter in Unity. This was my first experience with Unity, and as such I spent most of the time watching tutorials and desparately deciphering the mysteries of Unity&#39;s component / entity system.</description>
    </item>
    
    <item>
      <title>Coffeescript &#43; RequireJS Skeleton Project</title>
      <link>https://donaldhutchison.info/blog/2014-01-10-coffeescript-skeleton/</link>
      <pubDate>Fri, 10 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://donaldhutchison.info/blog/2014-01-10-coffeescript-skeleton/</guid>
      <description>After being introduced to the awesome pixi.js framework by a colleague, I decided to update an old project of mine to make screwing around with it a little easier. This skeleton project comes with everything you need to run a pretty decent setup, and all at the cost of only two command line options.
Skeleton Project! The initial configuration is usually a pain for me, so I threw together an example project and some scripts to manage this.</description>
    </item>
    
    <item>
      <title>Jekyll Migration Woes</title>
      <link>https://donaldhutchison.info/blog/2013-07-18-installing-jekyll-oh-lordy/</link>
      <pubDate>Thu, 18 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://donaldhutchison.info/blog/2013-07-18-installing-jekyll-oh-lordy/</guid>
      <description>After getting sick of wordpress I decided to do the cool hipster thing and move my blog to Jekyll. Both for the nerd credit and the super awesome minimal design (static site = no moving parts! awesome!). After reading about Josh Kaufman&#39;s experience with Jekyll in his book it sounded like a pretty easy and maintainable platform to blog on.
However&amp;hellip; On the way I encountered a few issues that almost took the chill out of a refreshing Thursday night in Berlin.</description>
    </item>
    
    <item>
      <title>Optimising CoffeeScript files with r.js - &#34;Unexpected Character&#34;</title>
      <link>https://donaldhutchison.info/blog/2012-06-11-optimising-coffeescript-files-with-r-js-unexpected-character/</link>
      <pubDate>Mon, 11 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://donaldhutchison.info/blog/2012-06-11-optimising-coffeescript-files-with-r-js-unexpected-character/</guid>
      <description>The Problem&amp;hellip; When trying to optimise a coffeescript project with the latest r.js optimiser from the requirejs npm module I ran into the following error:
Cannot uglify file: /path/to/main.js. Skipping it. Error is: Unexpected character &amp;#39;&amp;#39; (line: 363, col: 3, pos: 15612) I downloaded the uglify-js package which r.js is using here to minify the script. Running it on the file in question in the output directory of the r.js build process gave me more information - specifically that uglify is dying on the character sequence ï»¿ - a utf-8 byte order mark.</description>
    </item>
    
    <item>
      <title>Coffeescript RequireJS and You!</title>
      <link>https://donaldhutchison.info/blog/2012-04-24-coffeescript-requirejs-and-you/</link>
      <pubDate>Tue, 24 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://donaldhutchison.info/blog/2012-04-24-coffeescript-requirejs-and-you/</guid>
      <description>Contents  * Auto generated table of contents {:toc}   Best friends together at last! So you want to create a javascript application with some kind of non trivial complexity, but separating the functionality out into different script files gets hairy. You need to forward declare certain functions before you execute certain functions, and things need to be loaded before they can be displayed. Then when you add CoffeeScript into the mix you&#39;ve got a whole new set of problems.</description>
    </item>
    
    <item>
      <title>2D OBB Collisions in XNA</title>
      <link>https://donaldhutchison.info/blog/2010-03-07-2d-obb-collisions-in-xna/</link>
      <pubDate>Sun, 07 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://donaldhutchison.info/blog/2010-03-07-2d-obb-collisions-in-xna/</guid>
      <description>OBBs (Oriented Bounding Boxes) allow for a greater degree of accuracy than their axis aligned counterparts in the field of collision detection. It turns out this is a lot simpler to implement in 2D than 3D.
Here&#39;s my own take on it, which I hope to put to heavy use in an ongoing project. The OBB is modelled by an orientation matrix (in the form of two Vector2&#39;s because the Matrix type seems to suck), an origin and a Vector2 representing the +ve half widths in the x and y axis.</description>
    </item>
    
  </channel>
</rss>