<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rake on Donald Hutchison! Software Development!</title>
    <link>https://donaldhutchison.info/tags/rake/</link>
    <description>Recent content in rake on Donald Hutchison! Software Development!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Oct 2014 19:46:40 +0000</lastBuildDate>
    
	<atom:link href="https://donaldhutchison.info/tags/rake/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Compiling C with Rakefiles</title>
      <link>https://donaldhutchison.info/blog/2014-10-19-compiling-c-with-rakefiles/</link>
      <pubDate>Sun, 19 Oct 2014 19:46:40 +0000</pubDate>
      
      <guid>https://donaldhutchison.info/blog/2014-10-19-compiling-c-with-rakefiles/</guid>
      <description>Make is solid. It&#39;s been around since before the internet and still one of the most important tools used today. As such - it&#39;s tried, proven, tested, and was used in some of the most successful projects out there.
&amp;hellip;but what are the chances that something so old got it right the first time? What are the chances that good old Make is the be-all, end-all, perfect ultimate solution for every possible development project?</description>
    </item>
    
  </channel>
</rss>